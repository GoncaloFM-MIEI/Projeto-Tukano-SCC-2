# Persistent Volume for storing blobs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: blobs-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data/blobs"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: blobs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

# Deployment for Tukano app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tukano-app
  labels:
    app: tukano-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tukano-app
  template:
    metadata:
      labels:
        app: tukano-app
    spec:
      containers:
        - name: tukano-container
          image: goncalofm/tukano:latest
          volumeMounts:
            - mountPath: "/mnt/vol"
              name: blobs-volume
          ports:
            - containerPort: 8080
          env:
            - name: REDIS_HOST
              value: "redis-service"
            - name: POSTGRES_HOST
              value: "postgres-service"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
      volumes:
        - name: blobs-volume
          persistentVolumeClaim:
            claimName: blobs-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: tukano-app
spec:
  selector:
    app: tukano-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer

# Deployment for PostgreSQL database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-container
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "tukano_db"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          volumeMounts:
            - name: postgres-storage
              mountPath: "/var/lib/postgresql/data"
      volumes:
        - name: postgres-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

# Secrets for PostgreSQL credentials
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  username: dGVzdF91c2Vy # base64 for 'test_user'
  password: c2VjcmV0X3Bhc3N3b3Jk # base64 for 'secret_password'

# Deployment for Redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-service
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis-container
          image: redis:latest
          ports:
            - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
