# Persistent Volume for storing blobs
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tukano-blob-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "/mnt/data/blobs"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tukano-blob-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tukano
  labels:
    app: tukano
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tukano
  template:
    metadata:
      labels:
        app: tukano
    spec:
      containers:
        - name: tukano
          image: goncalofm/tukano-1:latest
          volumeMounts:
            - mountPath: "/mnt/vol"
              name: blob-storage
          ports:
            - containerPort: 8080
          env:
            - name: HAS_CACHE
              value: "true"
            - name: BLOBS_URL
              value: "http://goncalofmtukano.germanywestcentral.cloudapp.azure.com:8080/tukano-1/rest"
            - name: REDIS_URL
              value: "http://redis-service:6379/"
            - name: REDIS_HOST
              value: "redis-service"
            - name: REDIS_PORT
              value: "6379"
            - name: SECRET
              value: "SEGREDO_DO_ZE_RIC"
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: "tukano_db"
            - name: DB_USER
              value: "tukano_user"
            - name: DB_PASSWORD
              value: "tukano_password"
            - name: BLOBS_PATH
              value: "/mnt/vol/"
      volumes:
        - name: blob-storage
          persistentVolumeClaim:
            claimName: tukano-blob-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: tukano
spec:
  selector:
    app: tukano
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRESQL_LOG_LEVEL
              value: "DEBUG"
            - name: POSTGRESQL_LOG_STATEMENT
              value: "all"
            - name: POSTGRESQL_LOG_DURATION
              value: "on"
            - name: POSTGRESQL_LOG_MIN_MESSAGES
              value: "debug1"
            - name: POSTGRES_USER
              value: tukano_user
            - name: POSTGRES_PASSWORD
              value: tukano_password
            - name: POSTGRES_DB
              value: tukano_db
#          volumeMounts:
#            - name: postgres-data
#              mountPath: /var/lib/postgresql/data
#      volumes:
#        - name: postgres-data
#          persistentVolumeClaim:
#            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-service
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis-container
          image: redis:latest
          ports:
            - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
