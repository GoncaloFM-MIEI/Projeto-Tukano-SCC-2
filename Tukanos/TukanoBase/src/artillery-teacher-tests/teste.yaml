config:
  #target: http://127.0.0.1:8080/tukano/rest
  plugins:
    metrics-by-endpoint: {}
  #  http:
  #    timeout: 10
  processor: ./test-utils.js
  phases:
    - name: "Blobs-testing"
      duration: 1
      arrivalRate: 1
#  payload:
#    path: ../data/users.csv
#    #order: sequence # selects users sequentially, default is random
#    loadAll: true # load the whole CSV
#    name: auth
#    #skipHeader: true # The first line is a header, so we want to skip it
#    #delimiter: "," # standard delimiter
#    #skipEmptyLines: true # not important in our case
#    fields:
#      - "userid"
#      - "pwd"
#      - "email"
#      - "displayName"

scenarios:
  - flow:
      - loop:
          # User creation
          - post:
              url: http://scc2425-grave1-users-shorts-1.germanywestcentral.azurecontainer.io:8080/tukano-users-shorts-1/rest/users
              headers:
                Content-Type: application/json
              afterResponse: "printStatus"
              json:
                userId: "kGallagher"
                pwd: "easypass"
                email: "kgallagher@gmail.com"
                displayName: "Gallagher"
          - post:
              url: http://scc2425-grave1-users-shorts-1.germanywestcentral.azurecontainer.io:8080/tukano-users-shorts-1/rest/users
              headers:
                Content-Type: application/json
              afterResponse: "printStatus"
              json:
                userId: "SergioDuarte"
                pwd: "easypass"
                email: "smd@gmail.com"
                displayName: "SergioD"
          # Shorts creation
          - post:
              url: http://scc2425-grave1-users-shorts-1.germanywestcentral.azurecontainer.io:8080/tukano-users-shorts-1/rest/shorts/kGallagher?pwd=easypass
              afterResponse:
                - capture:
                    json: $.urlWithToken
                    as: url1
          #- post:
          #    url: /shorts/SergioDuarte?pwd=easypass
          #    afterResponse:
          #      - capture:
          #          json: $.urlWithToken
          #          as: url2
          # Blobs creation
          - post:
              url: url1
              body: !!binary |
                iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABH0lEQVR42mJ8//8/Ax8BgwBEsDQACZwVBoF4AhgYpI3wG1C8A1QDhAMoAcgABKUkAKK0AFCIAAAAAAElFTkSuQmCC
              afterResponse: "printStatus"

          # o download to sink?
          # Step 5: Delete all blobs for user "liskov"
#          - delete:
#              url: /liskov/blobs
#              queryParams:
#                token: "uploadTokenValue"  # Replace with the actual token value
#              afterResponse: "printStatus"

